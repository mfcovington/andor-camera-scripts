SetTemperature(-75)
cooler(1)
SetShutter(2,1)
SetShutterTransferTime(25)
SetImage(1,1024,2,1,1024,2)
SetReadoutTime(32)
dawn=0
dusk=25
bits=128
resolution=2
exposure=20
autodecay=10
input("What number is this experiment?", expt$)
input("Is this a generic experiment? (20-min exposures; 2-hr resolution; 128 bits of cRL; starting ASAP)", default$)
input("Comments about experiment:", comments$)
if (asc(default$)!=121) and (asc(default$)!=89) then gosub .setparameters
SetSingleScan(exposure*60)
gosub .timestamp
if asc(start$)==0 then start$="now"
if asc(start$)==110 then start$=left$(time$(),5)
starthr=val(left$(start$,2))
startmin=(val(right$(start$,2))/60)
starttime=(starthr+startmin)

print(date$())
print("DULL-"+ expt$)
print(comments$)
gosub .timestamp
if timestamp<starttime then
	print("Started program at ";left$(time$(),5))
	print("Started imaging at ";start$)
else
	print("Started at ";left$(time$(),5))
endif

if (asc(default$)!=121) and (asc(default$)!=89) then
	if (dawn==0) and (dusk==25) then
		print("Imaged in LL")
	else
		if (dawn==25) and (dusk==25) then print("Imaged in DD") else print("DAWN=";dawn,,"DUSK=";dusk)
	endif
	if (dawn==25) and (dusk==25) then print(resolution;" hour resolution") else print(resolution;" hour resolution in ";bits;" bits RL")
	print("Autodecay for ";autodecay;" minutes prior to ";exposure;"-min exposures")
else
	print("Generic experiment: 20-min exposures; 2-hr resolution; 128 bits of cRL")
endif

gosub .timestamp
if (timestamp>=dawn) and (timestamp<=dusk) then lights=1 else lights=0
if lights==1 then
	print(date$(),time$(),"BEGINNING OF EXPERIMENT: LIGHTS ON")
	I2CBurstWrite(41,6,bits)
else
	print(date$(),time$(),"BEGINNING OF EXPERIMENT: LIGHTS OFF")
	I2CBurstWrite(41,6,0)
endif

while starttime>timestamp
	gosub .timestamp
	if (timestamp>=dawn) and (timestamp<dusk) then turnlightson=1 else turnlightson=0
	if turnlightson-lights==1 then print(date$(),time$(),"DAWN: LIGHTS ON")
	if turnlightson-lights==-1 then print(date$(),time$(),"DUSK: LIGHTS OFF")
	if turnlightson==1 then lights=1
	if turnlightson==0 then lights=0
	if lights==1 then I2CBurstWrite(41,6,bits)
wend
nexttime=starttime

i=0
while i<1000
	gosub .timestamp
	while val(left$(nexttime,5))!=val(left$(timestamp,5))
		gosub .timestamp
		if (timestamp>=dawn) and (timestamp<dusk) then turnlightson=1 else turnlightson=0
		if turnlightson-lights==1 then print(date$(),time$(),"DAWN: LIGHTS ON")
		if turnlightson-lights==-1 then print(date$(),time$(),"DUSK: LIGHTS OFF")
		if turnlightson==1 then lights=1
		if turnlightson==0 then lights=0
		if lights==1 then I2CBurstWrite(41,6,bits)
	wend



                
	I2CBurstWrite(41,6,0)
	if lights==1 then print(date$(),time$(),,"LIGHTS OFF FOR IMAGING")							
	j=0								
	while j<60
		if mod(j,12)==0 then beep()
		delay(1000*autodecay)
		j=j+1
	wend
	print(date$(),time$(),,,"IMAGE ";i+1;" STARTED")
	run()							   
	delay (100)
	i=i+1							   
	i$=str$(i)
	file1$=	"c:\Andor\current\DULL-"+ expt$ +"_" + i$ +".tif" 
	ExportTiff(#0,file1$,1,1,0)
	print(date$(),time$(),,,,"IMAGE ";i;" SAVED")
	if lights==1 then print(date$(),time$(),,"LIGHTS ON AFTER IMAGING")
	if nexttime+resolution<24 then nexttime=nexttime+resolution else nexttime=nexttime+resolution-24
wend		


.setparameters
	input("If imaging in L/D cycles, what hour is dawn? (e.g. 8 is 8:00 AM; LL or DD for constant conditions)",dawn$)
	dawn=val(dawn$)
	if (asc(dawn$)==76) or (asc(dawn$)==108) then
		dawn=0
		dusk=25
	endif
	if (asc(dawn$)==68) or (asc(dawn$)==100) then
		dawn=25
		dusk=25
	endif
	if (dawn!=0) and (dawn!=25) then input("What hour is dusk? (e.g 20 for 8:00 PM)",dusk)
	if dawn!=25 then input("How many bits of red light do you want to expose the plants to? (e.g. 128 for a normal experiment)",bits)
	input("How many hours do you want between starting to acquire images?",resolution)
	input("How many minutes would you like to let your seedlings chill out in the dark?",autodecay)
	input("For how many minutes do your plants like to be exposed?",exposure)
	input("What time do you want to start imaging? (Format as 08:30 or 20:30; leave blank for ASAP.)", start$)
return

.timestamp
	hourstamp=val(left$(time$(),2))
	minstamp=((val(mid$(time$(),4,2)))/60)
	timestamp=(hourstamp+minstamp)
return